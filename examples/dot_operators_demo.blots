// Demonstration of dot-prefixed comparison operators
// These operators disable broadcasting when comparing lists

// Regular == with broadcasting
// Each element of [true, true, true] is compared to true
output broadcast_eq = [true, true, true] == true  // [true, true, true]

// Dot operator without broadcasting
// The whole list is compared to the scalar
output whole_list_eq = [true, true, true] .== true  // false

// Comparing lists with dot operator
output list_to_list_eq = [1, 2, 3] .== [1, 2, 3]  // true
output list_to_list_neq = [1, 2, 3] .== [1, 2, 4]  // false

// Lexicographic comparison with dot operators
output list_less = [1, 2, 2] .< [1, 2, 3]  // true (2 < 3 at position 2)
output list_greater = [2] .> [1, 9, 9]  // true (first element decides)
output list_less_empty = [] .< [1]  // true (empty list is less)

// Mixed comparisons
output regular_5_equals_each = [5, 5, 5] == 5  // [true, true, true] (each element compared to 5)
output dot_list_not_equals_5 = [5, 5, 5] .== 5  // false (list !== scalar)

// Nested lists work too
output nested_eq = [[1, 2], [3, 4]] .== [[1, 2], [3, 4]]  // true

// Scalars work the same with both operators
output scalar_regular = 5 == 5  // true
output scalar_dot = 5 .== 5  // true
