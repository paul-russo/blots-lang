// Test complex each/with combinations similar to the benchmark
nums = range(10)

// Test nested each/with like in the benchmark
fibs_like = collect(each(nums) with (i => i * i + 1))
print("Fibonacci-like sequence: {}", fibs_like)

// Test filtering with each/with
evens = filter(x => x % 2 == 0, collect(each(nums) with (i => i * 2)))
print("Even doubled numbers: {}", evens)

// Test chained operations
result = collect(each(range(5)) with (x => x * x))
sum_of_squares = sum(...result)
print("Sum of squares 0-4: {}", sum_of_squares)

// Test with records/objects
point_list = [[1, 2], [3, 4], [5, 6]]
distances = collect(each(point_list) with (point => sqrt(point[0] * point[0] + point[1] * point[1])))
print("Distances from origin: {}", distances)