WHITESPACE = _{ " " | "\t" | "\r\n" | "\n" }

number  = @{ integer ~ ("." ~ ASCII_DIGIT+)? ~ (^"e" ~ integer)? }
integer = _{ ("+" | "-")? ~ ASCII_DIGIT+ }

identifier      = @{ ASCII_ALPHA+ ~ identifier_rest* }
identifier_rest = _{ ASCII_ALPHA+ | ASCII_DIGIT+ | "_"+ }

infix_op = _{ add | subtract | multiply | divide | modulo | power }
add      =  { "+" }
subtract =  { "-" }
multiply =  { "*" }
divide   =  { "/" }
modulo   =  { "%" }
power    =  { "^" }

prefix_op = _{ negation }
negation  =  { "-" }

postfix_op = _{ factorial }
factorial  =  { "!" }

spread_operator       =  { "..." }
spread_expression     = ${ spread_operator ~ expression }
spreadable_expression = _{ spread_expression | expression }

call_list     = !{ "(" ~ spreadable_expression ~ ("," ~ spreadable_expression)* ~ ")" }
function_call = ${ identifier ~ call_list }

list        = !{ "[]" | "[" ~ spreadable_expression ~ ("," ~ spreadable_expression)* ~ "]" }
list_access = ${ identifier ~ "[" ~ WHITESPACE* ~ expression ~ WHITESPACE* ~ "]" }

expression        = !{ prefix_op* ~ term ~ postfix_op* ~ (infix_op ~ prefix_op* ~ term ~ postfix_op*)* }
nested_expression = _{ "(" ~ expression ~ ")" }
term              = _{ function_call | list | list_access | identifier | number | nested_expression }

assignment = !{ identifier ~ "=" ~ expression }

argument_list       = !{ "(" ~ identifier ~ ("," ~ identifier)* ~ ")" }
function_definition = ${ identifier ~ argument_list ~ WHITESPACE* ~ "=" ~ WHITESPACE* ~ expression }

comment = { ("#" | "//") ~ (!"\n" ~ ANY)* }

input = _{ SOI ~ (assignment | function_definition | expression | comment) ~ comment? ~ EOI }
